@page "/fetchdata"
@using Syncfusion.Blazor.RichTextEditor
@using Syncfusion.Blazor.Buttons
@inject IJSRuntime JSRuntime;
@inherits Coder

<PageTitle>Weather forecast</PageTitle>

<!---->
<div class="session">
    <div class="control">
        <SfButton @onclick ="@New">New_file</SfButton>
        <InputFile class="input" id="_usr_input"></InputFile><label for="_usr_input" CssClass="e-flat">Load .py file</label>
    </div>


    <SfRichTextEditor  @bind-Value="@inline" @ref="@rteObj" @EnableTabKey="true" @AutoSaveOnIdle="true">
        <RichTextEditorToolbarSettings Items="@ToolsForInline" />
    </SfRichTextEditor>
    @inline
    <SfButton CssClass="e-flat" @onclick ="@Mold" IconCss="e-icons e-play">play</SfButton>
    <div class="container">
        <p class="bottom-left">@molding</p>
    </div>
</div>

<style>
       .input{
           display:none;
       }
       .container {
	position: relative;
	width: 100%;
	height: 200px;
	background: #000;
}

.container p {
	color: #FFF;
	padding: 0 8px;
	margin: 0;
}

.bottom-left {
	position: absolute;
	bottom: 0;
	left: 0;
}
</style>

@code {
    SfRichTextEditor rteObj;
    private List<ToolbarItemModel> ToolsForInline = new List<ToolbarItemModel>()
    {
        new ToolbarItemModel() { Command = ToolbarCommand.Undo },
        new ToolbarItemModel() { Command = ToolbarCommand.Redo}
    };
    public void Start()
    {
        rteObj.EnableTabKey = true;
        rteObj.AutoSaveOnIdle = true;
        rteObj.EnablePersistence = true;
    }

    protected override async void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            Start();
        }
    }

}
